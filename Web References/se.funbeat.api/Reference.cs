//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Janohl.ST2Funbeat.se.funbeat.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileServiceSoap", Namespace="http://api.funbeat.se/")]
    public partial class MobileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WhichTrainingsHaveBeenDeletedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrackPointsFromTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhotosForTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyNewsFeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToFriendListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAndCreateSecretsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExerciseTitleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyMostRecentlyUsedTrainingTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPersonsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileService() {
            this.Url = global::Janohl.ST2Funbeat.Properties.Settings.Default.Janohl_ST2Funbeat_se_funbeat_api_MobileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WhichTrainingsHaveBeenDeletedCompletedEventHandler WhichTrainingsHaveBeenDeletedCompleted;
        
        /// <remarks/>
        public event GetTrackPointsFromTrainingCompletedEventHandler GetTrackPointsFromTrainingCompleted;
        
        /// <remarks/>
        public event GetPhotosForTrainingCompletedEventHandler GetPhotosForTrainingCompleted;
        
        /// <remarks/>
        public event AddTrainingCommentCompletedEventHandler AddTrainingCommentCompleted;
        
        /// <remarks/>
        public event DeleteTrainingCommentCompletedEventHandler DeleteTrainingCommentCompleted;
        
        /// <remarks/>
        public event GetTrainingCompletedEventHandler GetTrainingCompleted;
        
        /// <remarks/>
        public event SaveTrainingCompletedEventHandler SaveTrainingCompleted;
        
        /// <remarks/>
        public event DeleteTrainingCompletedEventHandler DeleteTrainingCompleted;
        
        /// <remarks/>
        public event GetMyNewsFeedCompletedEventHandler GetMyNewsFeedCompleted;
        
        /// <remarks/>
        public event AddToFriendListCompletedEventHandler AddToFriendListCompleted;
        
        /// <remarks/>
        public event GetMyFriendsCompletedEventHandler GetMyFriendsCompleted;
        
        /// <remarks/>
        public event GetTrainingTypesCompletedEventHandler GetTrainingTypesCompleted;
        
        /// <remarks/>
        public event SignUpCompletedEventHandler SignUpCompleted;
        
        /// <remarks/>
        public event ValidateAndCreateSecretsCompletedEventHandler ValidateAndCreateSecretsCompleted;
        
        /// <remarks/>
        public event GetMyEquipmentCompletedEventHandler GetMyEquipmentCompleted;
        
        /// <remarks/>
        public event GetExerciseTitleListCompletedEventHandler GetExerciseTitleListCompleted;
        
        /// <remarks/>
        public event GetMyMostRecentlyUsedTrainingTypesCompletedEventHandler GetMyMostRecentlyUsedTrainingTypesCompleted;
        
        /// <remarks/>
        public event GetPersonCompletedEventHandler GetPersonCompleted;
        
        /// <remarks/>
        public event SearchPersonsCompletedEventHandler SearchPersonsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/WhichTrainingsHaveBeenDeleted", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] WhichTrainingsHaveBeenDeleted(string applicationID, string loginID, string loginSecret, int[] trainingIDs) {
            object[] results = this.Invoke("WhichTrainingsHaveBeenDeleted", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingIDs});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void WhichTrainingsHaveBeenDeletedAsync(string applicationID, string loginID, string loginSecret, int[] trainingIDs) {
            this.WhichTrainingsHaveBeenDeletedAsync(applicationID, loginID, loginSecret, trainingIDs, null);
        }
        
        /// <remarks/>
        public void WhichTrainingsHaveBeenDeletedAsync(string applicationID, string loginID, string loginSecret, int[] trainingIDs, object userState) {
            if ((this.WhichTrainingsHaveBeenDeletedOperationCompleted == null)) {
                this.WhichTrainingsHaveBeenDeletedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWhichTrainingsHaveBeenDeletedOperationCompleted);
            }
            this.InvokeAsync("WhichTrainingsHaveBeenDeleted", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingIDs}, this.WhichTrainingsHaveBeenDeletedOperationCompleted, userState);
        }
        
        private void OnWhichTrainingsHaveBeenDeletedOperationCompleted(object arg) {
            if ((this.WhichTrainingsHaveBeenDeletedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WhichTrainingsHaveBeenDeletedCompleted(this, new WhichTrainingsHaveBeenDeletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetTrackPointsFromTraining", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrackPoint[] GetTrackPointsFromTraining(string applicationID, string loginID, string loginSecret, int trainingID) {
            object[] results = this.Invoke("GetTrackPointsFromTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID});
            return ((TrackPoint[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTrackPointsFromTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID) {
            this.GetTrackPointsFromTrainingAsync(applicationID, loginID, loginSecret, trainingID, null);
        }
        
        /// <remarks/>
        public void GetTrackPointsFromTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID, object userState) {
            if ((this.GetTrackPointsFromTrainingOperationCompleted == null)) {
                this.GetTrackPointsFromTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrackPointsFromTrainingOperationCompleted);
            }
            this.InvokeAsync("GetTrackPointsFromTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID}, this.GetTrackPointsFromTrainingOperationCompleted, userState);
        }
        
        private void OnGetTrackPointsFromTrainingOperationCompleted(object arg) {
            if ((this.GetTrackPointsFromTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrackPointsFromTrainingCompleted(this, new GetTrackPointsFromTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetPhotosForTraining", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPhotosForTraining(string applicationID, string loginID, string loginSecret, int trainingID) {
            object[] results = this.Invoke("GetPhotosForTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPhotosForTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID) {
            this.GetPhotosForTrainingAsync(applicationID, loginID, loginSecret, trainingID, null);
        }
        
        /// <remarks/>
        public void GetPhotosForTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID, object userState) {
            if ((this.GetPhotosForTrainingOperationCompleted == null)) {
                this.GetPhotosForTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhotosForTrainingOperationCompleted);
            }
            this.InvokeAsync("GetPhotosForTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID}, this.GetPhotosForTrainingOperationCompleted, userState);
        }
        
        private void OnGetPhotosForTrainingOperationCompleted(object arg) {
            if ((this.GetPhotosForTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhotosForTrainingCompleted(this, new GetPhotosForTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/AddTrainingComment", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTrainingComment(string applicationID, string loginID, string loginSecret, int trainingID, string Comment, bool markAsRead) {
            object[] results = this.Invoke("AddTrainingComment", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID,
                        Comment,
                        markAsRead});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingCommentAsync(string applicationID, string loginID, string loginSecret, int trainingID, string Comment, bool markAsRead) {
            this.AddTrainingCommentAsync(applicationID, loginID, loginSecret, trainingID, Comment, markAsRead, null);
        }
        
        /// <remarks/>
        public void AddTrainingCommentAsync(string applicationID, string loginID, string loginSecret, int trainingID, string Comment, bool markAsRead, object userState) {
            if ((this.AddTrainingCommentOperationCompleted == null)) {
                this.AddTrainingCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingCommentOperationCompleted);
            }
            this.InvokeAsync("AddTrainingComment", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID,
                        Comment,
                        markAsRead}, this.AddTrainingCommentOperationCompleted, userState);
        }
        
        private void OnAddTrainingCommentOperationCompleted(object arg) {
            if ((this.AddTrainingCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingCommentCompleted(this, new AddTrainingCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/DeleteTrainingComment", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTrainingComment(string applicationID, string loginID, string loginSecret, int TrainingCommentID) {
            object[] results = this.Invoke("DeleteTrainingComment", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        TrainingCommentID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingCommentAsync(string applicationID, string loginID, string loginSecret, int TrainingCommentID) {
            this.DeleteTrainingCommentAsync(applicationID, loginID, loginSecret, TrainingCommentID, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingCommentAsync(string applicationID, string loginID, string loginSecret, int TrainingCommentID, object userState) {
            if ((this.DeleteTrainingCommentOperationCompleted == null)) {
                this.DeleteTrainingCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingComment", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        TrainingCommentID}, this.DeleteTrainingCommentOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingCommentOperationCompleted(object arg) {
            if ((this.DeleteTrainingCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingCommentCompleted(this, new DeleteTrainingCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetTraining", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrainingResult GetTraining(string applicationID, string loginID, string loginSecret, int TrainingID, string languageCode) {
            object[] results = this.Invoke("GetTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        TrainingID,
                        languageCode});
            return ((TrainingResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingAsync(string applicationID, string loginID, string loginSecret, int TrainingID, string languageCode) {
            this.GetTrainingAsync(applicationID, loginID, loginSecret, TrainingID, languageCode, null);
        }
        
        /// <remarks/>
        public void GetTrainingAsync(string applicationID, string loginID, string loginSecret, int TrainingID, string languageCode, object userState) {
            if ((this.GetTrainingOperationCompleted == null)) {
                this.GetTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingOperationCompleted);
            }
            this.InvokeAsync("GetTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        TrainingID,
                        languageCode}, this.GetTrainingOperationCompleted, userState);
        }
        
        private void OnGetTrainingOperationCompleted(object arg) {
            if ((this.GetTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingCompleted(this, new GetTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/SaveTraining", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientServerRelationResult SaveTraining(string applicationID, string loginID, string loginSecret, Training Training, string clientID) {
            object[] results = this.Invoke("SaveTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        Training,
                        clientID});
            return ((ClientServerRelationResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTrainingAsync(string applicationID, string loginID, string loginSecret, Training Training, string clientID) {
            this.SaveTrainingAsync(applicationID, loginID, loginSecret, Training, clientID, null);
        }
        
        /// <remarks/>
        public void SaveTrainingAsync(string applicationID, string loginID, string loginSecret, Training Training, string clientID, object userState) {
            if ((this.SaveTrainingOperationCompleted == null)) {
                this.SaveTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTrainingOperationCompleted);
            }
            this.InvokeAsync("SaveTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        Training,
                        clientID}, this.SaveTrainingOperationCompleted, userState);
        }
        
        private void OnSaveTrainingOperationCompleted(object arg) {
            if ((this.SaveTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTrainingCompleted(this, new SaveTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/DeleteTraining", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientServerRelationResult DeleteTraining(string applicationID, string loginID, string loginSecret, int trainingID, string clientID) {
            object[] results = this.Invoke("DeleteTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID,
                        clientID});
            return ((ClientServerRelationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID, string clientID) {
            this.DeleteTrainingAsync(applicationID, loginID, loginSecret, trainingID, clientID, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID, string clientID, object userState) {
            if ((this.DeleteTrainingOperationCompleted == null)) {
                this.DeleteTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingOperationCompleted);
            }
            this.InvokeAsync("DeleteTraining", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID,
                        clientID}, this.DeleteTrainingOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingOperationCompleted(object arg) {
            if ((this.DeleteTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingCompleted(this, new DeleteTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetMyNewsFeed", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsFeedItem[] GetMyNewsFeed(string applicationID, string loginID, string loginSecret) {
            object[] results = this.Invoke("GetMyNewsFeed", new object[] {
                        applicationID,
                        loginID,
                        loginSecret});
            return ((NewsFeedItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyNewsFeedAsync(string applicationID, string loginID, string loginSecret) {
            this.GetMyNewsFeedAsync(applicationID, loginID, loginSecret, null);
        }
        
        /// <remarks/>
        public void GetMyNewsFeedAsync(string applicationID, string loginID, string loginSecret, object userState) {
            if ((this.GetMyNewsFeedOperationCompleted == null)) {
                this.GetMyNewsFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyNewsFeedOperationCompleted);
            }
            this.InvokeAsync("GetMyNewsFeed", new object[] {
                        applicationID,
                        loginID,
                        loginSecret}, this.GetMyNewsFeedOperationCompleted, userState);
        }
        
        private void OnGetMyNewsFeedOperationCompleted(object arg) {
            if ((this.GetMyNewsFeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyNewsFeedCompleted(this, new GetMyNewsFeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/AddToFriendList", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddToFriendList(string applicationID, string loginID, string loginSecret, int personID, string helloMessage) {
            object[] results = this.Invoke("AddToFriendList", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        helloMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddToFriendListAsync(string applicationID, string loginID, string loginSecret, int personID, string helloMessage) {
            this.AddToFriendListAsync(applicationID, loginID, loginSecret, personID, helloMessage, null);
        }
        
        /// <remarks/>
        public void AddToFriendListAsync(string applicationID, string loginID, string loginSecret, int personID, string helloMessage, object userState) {
            if ((this.AddToFriendListOperationCompleted == null)) {
                this.AddToFriendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToFriendListOperationCompleted);
            }
            this.InvokeAsync("AddToFriendList", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        helloMessage}, this.AddToFriendListOperationCompleted, userState);
        }
        
        private void OnAddToFriendListOperationCompleted(object arg) {
            if ((this.AddToFriendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToFriendListCompleted(this, new AddToFriendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetMyFriends", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FriendResult[] GetMyFriends(string applicationID, string loginID, string loginSecret) {
            object[] results = this.Invoke("GetMyFriends", new object[] {
                        applicationID,
                        loginID,
                        loginSecret});
            return ((FriendResult[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyFriendsAsync(string applicationID, string loginID, string loginSecret) {
            this.GetMyFriendsAsync(applicationID, loginID, loginSecret, null);
        }
        
        /// <remarks/>
        public void GetMyFriendsAsync(string applicationID, string loginID, string loginSecret, object userState) {
            if ((this.GetMyFriendsOperationCompleted == null)) {
                this.GetMyFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyFriendsOperationCompleted);
            }
            this.InvokeAsync("GetMyFriends", new object[] {
                        applicationID,
                        loginID,
                        loginSecret}, this.GetMyFriendsOperationCompleted, userState);
        }
        
        private void OnGetMyFriendsOperationCompleted(object arg) {
            if ((this.GetMyFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyFriendsCompleted(this, new GetMyFriendsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetTrainingTypes", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrainingType[] GetTrainingTypes(string applicationID, string languageCode) {
            object[] results = this.Invoke("GetTrainingTypes", new object[] {
                        applicationID,
                        languageCode});
            return ((TrainingType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingTypesAsync(string applicationID, string languageCode) {
            this.GetTrainingTypesAsync(applicationID, languageCode, null);
        }
        
        /// <remarks/>
        public void GetTrainingTypesAsync(string applicationID, string languageCode, object userState) {
            if ((this.GetTrainingTypesOperationCompleted == null)) {
                this.GetTrainingTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingTypesOperationCompleted);
            }
            this.InvokeAsync("GetTrainingTypes", new object[] {
                        applicationID,
                        languageCode}, this.GetTrainingTypesOperationCompleted, userState);
        }
        
        private void OnGetTrainingTypesOperationCompleted(object arg) {
            if ((this.GetTrainingTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingTypesCompleted(this, new GetTrainingTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/SignUp", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SignUp(string applicationID, string firstName, string lastName, string email, string passwordHashed, Privacy privacy, string languageCode) {
            object[] results = this.Invoke("SignUp", new object[] {
                        applicationID,
                        firstName,
                        lastName,
                        email,
                        passwordHashed,
                        privacy,
                        languageCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SignUpAsync(string applicationID, string firstName, string lastName, string email, string passwordHashed, Privacy privacy, string languageCode) {
            this.SignUpAsync(applicationID, firstName, lastName, email, passwordHashed, privacy, languageCode, null);
        }
        
        /// <remarks/>
        public void SignUpAsync(string applicationID, string firstName, string lastName, string email, string passwordHashed, Privacy privacy, string languageCode, object userState) {
            if ((this.SignUpOperationCompleted == null)) {
                this.SignUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignUpOperationCompleted);
            }
            this.InvokeAsync("SignUp", new object[] {
                        applicationID,
                        firstName,
                        lastName,
                        email,
                        passwordHashed,
                        privacy,
                        languageCode}, this.SignUpOperationCompleted, userState);
        }
        
        private void OnSignUpOperationCompleted(object arg) {
            if ((this.SignUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignUpCompleted(this, new SignUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/ValidateAndCreateSecrets", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoginResult ValidateAndCreateSecrets(string applicationID, string username, string passwordHashed) {
            object[] results = this.Invoke("ValidateAndCreateSecrets", new object[] {
                        applicationID,
                        username,
                        passwordHashed});
            return ((LoginResult)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAndCreateSecretsAsync(string applicationID, string username, string passwordHashed) {
            this.ValidateAndCreateSecretsAsync(applicationID, username, passwordHashed, null);
        }
        
        /// <remarks/>
        public void ValidateAndCreateSecretsAsync(string applicationID, string username, string passwordHashed, object userState) {
            if ((this.ValidateAndCreateSecretsOperationCompleted == null)) {
                this.ValidateAndCreateSecretsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAndCreateSecretsOperationCompleted);
            }
            this.InvokeAsync("ValidateAndCreateSecrets", new object[] {
                        applicationID,
                        username,
                        passwordHashed}, this.ValidateAndCreateSecretsOperationCompleted, userState);
        }
        
        private void OnValidateAndCreateSecretsOperationCompleted(object arg) {
            if ((this.ValidateAndCreateSecretsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAndCreateSecretsCompleted(this, new ValidateAndCreateSecretsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetMyEquipment", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EquipmentShortInfo[] GetMyEquipment(string applicationID, string loginID, string loginSecret) {
            object[] results = this.Invoke("GetMyEquipment", new object[] {
                        applicationID,
                        loginID,
                        loginSecret});
            return ((EquipmentShortInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyEquipmentAsync(string applicationID, string loginID, string loginSecret) {
            this.GetMyEquipmentAsync(applicationID, loginID, loginSecret, null);
        }
        
        /// <remarks/>
        public void GetMyEquipmentAsync(string applicationID, string loginID, string loginSecret, object userState) {
            if ((this.GetMyEquipmentOperationCompleted == null)) {
                this.GetMyEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyEquipmentOperationCompleted);
            }
            this.InvokeAsync("GetMyEquipment", new object[] {
                        applicationID,
                        loginID,
                        loginSecret}, this.GetMyEquipmentOperationCompleted, userState);
        }
        
        private void OnGetMyEquipmentOperationCompleted(object arg) {
            if ((this.GetMyEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyEquipmentCompleted(this, new GetMyEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetExerciseTitleList", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExerciseTitle[] GetExerciseTitleList(string applicationID, string loginID, string loginSecret) {
            object[] results = this.Invoke("GetExerciseTitleList", new object[] {
                        applicationID,
                        loginID,
                        loginSecret});
            return ((ExerciseTitle[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExerciseTitleListAsync(string applicationID, string loginID, string loginSecret) {
            this.GetExerciseTitleListAsync(applicationID, loginID, loginSecret, null);
        }
        
        /// <remarks/>
        public void GetExerciseTitleListAsync(string applicationID, string loginID, string loginSecret, object userState) {
            if ((this.GetExerciseTitleListOperationCompleted == null)) {
                this.GetExerciseTitleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExerciseTitleListOperationCompleted);
            }
            this.InvokeAsync("GetExerciseTitleList", new object[] {
                        applicationID,
                        loginID,
                        loginSecret}, this.GetExerciseTitleListOperationCompleted, userState);
        }
        
        private void OnGetExerciseTitleListOperationCompleted(object arg) {
            if ((this.GetExerciseTitleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExerciseTitleListCompleted(this, new GetExerciseTitleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetMyMostRecentlyUsedTrainingTypes", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrainingType[] GetMyMostRecentlyUsedTrainingTypes(string applicationID, string loginID, string loginSecret, string languageCode) {
            object[] results = this.Invoke("GetMyMostRecentlyUsedTrainingTypes", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        languageCode});
            return ((TrainingType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyMostRecentlyUsedTrainingTypesAsync(string applicationID, string loginID, string loginSecret, string languageCode) {
            this.GetMyMostRecentlyUsedTrainingTypesAsync(applicationID, loginID, loginSecret, languageCode, null);
        }
        
        /// <remarks/>
        public void GetMyMostRecentlyUsedTrainingTypesAsync(string applicationID, string loginID, string loginSecret, string languageCode, object userState) {
            if ((this.GetMyMostRecentlyUsedTrainingTypesOperationCompleted == null)) {
                this.GetMyMostRecentlyUsedTrainingTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyMostRecentlyUsedTrainingTypesOperationCompleted);
            }
            this.InvokeAsync("GetMyMostRecentlyUsedTrainingTypes", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        languageCode}, this.GetMyMostRecentlyUsedTrainingTypesOperationCompleted, userState);
        }
        
        private void OnGetMyMostRecentlyUsedTrainingTypesOperationCompleted(object arg) {
            if ((this.GetMyMostRecentlyUsedTrainingTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyMostRecentlyUsedTrainingTypesCompleted(this, new GetMyMostRecentlyUsedTrainingTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/GetPerson", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonInfoItem GetPerson(string applicationID, string loginID, string loginSecret, int PersonID) {
            object[] results = this.Invoke("GetPerson", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        PersonID});
            return ((PersonInfoItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonAsync(string applicationID, string loginID, string loginSecret, int PersonID) {
            this.GetPersonAsync(applicationID, loginID, loginSecret, PersonID, null);
        }
        
        /// <remarks/>
        public void GetPersonAsync(string applicationID, string loginID, string loginSecret, int PersonID, object userState) {
            if ((this.GetPersonOperationCompleted == null)) {
                this.GetPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonOperationCompleted);
            }
            this.InvokeAsync("GetPerson", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        PersonID}, this.GetPersonOperationCompleted, userState);
        }
        
        private void OnGetPersonOperationCompleted(object arg) {
            if ((this.GetPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonCompleted(this, new GetPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.funbeat.se/SearchPersons", RequestNamespace="http://api.funbeat.se/", ResponseNamespace="http://api.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FriendResult[] SearchPersons(string applicationID, string loginID, string loginSecret, string searchText) {
            object[] results = this.Invoke("SearchPersons", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        searchText});
            return ((FriendResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchPersonsAsync(string applicationID, string loginID, string loginSecret, string searchText) {
            this.SearchPersonsAsync(applicationID, loginID, loginSecret, searchText, null);
        }
        
        /// <remarks/>
        public void SearchPersonsAsync(string applicationID, string loginID, string loginSecret, string searchText, object userState) {
            if ((this.SearchPersonsOperationCompleted == null)) {
                this.SearchPersonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPersonsOperationCompleted);
            }
            this.InvokeAsync("SearchPersons", new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        searchText}, this.SearchPersonsOperationCompleted, userState);
        }
        
        private void OnSearchPersonsOperationCompleted(object arg) {
            if ((this.SearchPersonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPersonsCompleted(this, new SearchPersonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrackPoint {
        
        private System.DateTime timeStampField;
        
        private bool isStartPointField;
        
        private System.Nullable<double> longitudeField;
        
        private System.Nullable<double> latitudeField;
        
        private System.Nullable<double> altitudeField;
        
        private System.Nullable<double> distanceField;
        
        private System.Nullable<double> speedField;
        
        private System.Nullable<double> paceField;
        
        private System.Nullable<int> cadField;
        
        private System.Nullable<int> powerField;
        
        private System.Nullable<int> hrField;
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public bool isStartPoint {
            get {
                return this.isStartPointField;
            }
            set {
                this.isStartPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Pace {
            get {
                return this.paceField;
            }
            set {
                this.paceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Cad {
            get {
                return this.cadField;
            }
            set {
                this.cadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Power {
            get {
                return this.powerField;
            }
            set {
                this.powerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HR {
            get {
                return this.hrField;
            }
            set {
                this.hrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class ExerciseTitle {
        
        private string titleField;
        
        private bool isMineField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool isMine {
            get {
                return this.isMineField;
            }
            set {
                this.isMineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class EquipmentShortInfo {
        
        private string equipmentTitleField;
        
        private bool inUseField;
        
        /// <remarks/>
        public string EquipmentTitle {
            get {
                return this.equipmentTitleField;
            }
            set {
                this.equipmentTitleField = value;
            }
        }
        
        /// <remarks/>
        public bool InUse {
            get {
                return this.inUseField;
            }
            set {
                this.inUseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class LoginResult {
        
        private PersonInfoItem userInfoField;
        
        private string loginIDField;
        
        private string loginSecretField;
        
        /// <remarks/>
        public PersonInfoItem UserInfo {
            get {
                return this.userInfoField;
            }
            set {
                this.userInfoField = value;
            }
        }
        
        /// <remarks/>
        public string LoginID {
            get {
                return this.loginIDField;
            }
            set {
                this.loginIDField = value;
            }
        }
        
        /// <remarks/>
        public string LoginSecret {
            get {
                return this.loginSecretField;
            }
            set {
                this.loginSecretField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class PersonInfoItem {
        
        private int personIDField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string mottoField;
        
        private string personalDescriptionField;
        
        private string photoNormalURLField;
        
        private string photoSmallURLField;
        
        private string photoMiniURLField;
        
        private string photoMicroURLField;
        
        private bool isPersonOnViewersFriendListField;
        
        private bool isViewerOnPersonsFriendListField;
        
        private Privacy privacyTrainingField;
        
        private Privacy privacyWeightField;
        
        private Privacy privacyDayNoteField;
        
        private Privacy privacyTracksField;
        
        private Privacy privacyEquipmentField;
        
        private Privacy privacyBlogField;
        
        private PersonFeedItem[] feedItemsField;
        
        /// <remarks/>
        public int PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string Motto {
            get {
                return this.mottoField;
            }
            set {
                this.mottoField = value;
            }
        }
        
        /// <remarks/>
        public string PersonalDescription {
            get {
                return this.personalDescriptionField;
            }
            set {
                this.personalDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoNormalURL {
            get {
                return this.photoNormalURLField;
            }
            set {
                this.photoNormalURLField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoSmallURL {
            get {
                return this.photoSmallURLField;
            }
            set {
                this.photoSmallURLField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoMiniURL {
            get {
                return this.photoMiniURLField;
            }
            set {
                this.photoMiniURLField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoMicroURL {
            get {
                return this.photoMicroURLField;
            }
            set {
                this.photoMicroURLField = value;
            }
        }
        
        /// <remarks/>
        public bool isPersonOnViewersFriendList {
            get {
                return this.isPersonOnViewersFriendListField;
            }
            set {
                this.isPersonOnViewersFriendListField = value;
            }
        }
        
        /// <remarks/>
        public bool isViewerOnPersonsFriendList {
            get {
                return this.isViewerOnPersonsFriendListField;
            }
            set {
                this.isViewerOnPersonsFriendListField = value;
            }
        }
        
        /// <remarks/>
        public Privacy PrivacyTraining {
            get {
                return this.privacyTrainingField;
            }
            set {
                this.privacyTrainingField = value;
            }
        }
        
        /// <remarks/>
        public Privacy PrivacyWeight {
            get {
                return this.privacyWeightField;
            }
            set {
                this.privacyWeightField = value;
            }
        }
        
        /// <remarks/>
        public Privacy PrivacyDayNote {
            get {
                return this.privacyDayNoteField;
            }
            set {
                this.privacyDayNoteField = value;
            }
        }
        
        /// <remarks/>
        public Privacy PrivacyTracks {
            get {
                return this.privacyTracksField;
            }
            set {
                this.privacyTracksField = value;
            }
        }
        
        /// <remarks/>
        public Privacy PrivacyEquipment {
            get {
                return this.privacyEquipmentField;
            }
            set {
                this.privacyEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public Privacy PrivacyBlog {
            get {
                return this.privacyBlogField;
            }
            set {
                this.privacyBlogField = value;
            }
        }
        
        /// <remarks/>
        public PersonFeedItem[] FeedItems {
            get {
                return this.feedItemsField;
            }
            set {
                this.feedItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public enum Privacy {
        
        /// <remarks/>
        NotSet,
        
        /// <remarks/>
        Everyone,
        
        /// <remarks/>
        Friends,
        
        /// <remarks/>
        Me,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class PersonFeedItem {
        
        private System.Nullable<int> idField;
        
        private string clientItemIDField;
        
        private string whatField;
        
        private System.Nullable<System.DateTime> dateTimeField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private string descriptionField;
        
        private string subjectField;
        
        private int numberOfPhotosField;
        
        private string pictureURLField;
        
        private string trainingTypeNameField;
        
        private System.Nullable<int> trainingTypeIDField;
        
        private Duration durationField;
        
        private System.Nullable<double> distanceField;
        
        private int numberOfCommentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ClientItemID {
            get {
                return this.clientItemIDField;
            }
            set {
                this.clientItemIDField = value;
            }
        }
        
        /// <remarks/>
        public string What {
            get {
                return this.whatField;
            }
            set {
                this.whatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfPhotos {
            get {
                return this.numberOfPhotosField;
            }
            set {
                this.numberOfPhotosField = value;
            }
        }
        
        /// <remarks/>
        public string PictureURL {
            get {
                return this.pictureURLField;
            }
            set {
                this.pictureURLField = value;
            }
        }
        
        /// <remarks/>
        public string TrainingTypeName {
            get {
                return this.trainingTypeNameField;
            }
            set {
                this.trainingTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TrainingTypeID {
            get {
                return this.trainingTypeIDField;
            }
            set {
                this.trainingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public Duration Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfComments {
            get {
                return this.numberOfCommentsField;
            }
            set {
                this.numberOfCommentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class Duration {
        
        private System.Nullable<int> hoursField;
        
        private System.Nullable<int> minutesField;
        
        private System.Nullable<int> secondsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Minutes {
            get {
                return this.minutesField;
            }
            set {
                this.minutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Seconds {
            get {
                return this.secondsField;
            }
            set {
                this.secondsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrainingType {
        
        private int trainingTypeIDField;
        
        private string trainingTypeNameField;
        
        /// <remarks/>
        public int TrainingTypeID {
            get {
                return this.trainingTypeIDField;
            }
            set {
                this.trainingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string TrainingTypeName {
            get {
                return this.trainingTypeNameField;
            }
            set {
                this.trainingTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class FriendResult {
        
        private int personIDField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string mottoField;
        
        private string photoNormalURLField;
        
        private string photoSmallURLField;
        
        private string photoMiniURLField;
        
        private string photoMicroURLField;
        
        /// <remarks/>
        public int PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string Motto {
            get {
                return this.mottoField;
            }
            set {
                this.mottoField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoNormalURL {
            get {
                return this.photoNormalURLField;
            }
            set {
                this.photoNormalURLField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoSmallURL {
            get {
                return this.photoSmallURLField;
            }
            set {
                this.photoSmallURLField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoMiniURL {
            get {
                return this.photoMiniURLField;
            }
            set {
                this.photoMiniURLField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoMicroURL {
            get {
                return this.photoMicroURLField;
            }
            set {
                this.photoMicroURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class NewsFeedItem {
        
        private int idField;
        
        private string clientItemIDField;
        
        private string whatField;
        
        private System.Nullable<System.DateTime> dateTimeField;
        
        private System.Nullable<System.DateTime> createdDateTimeField;
        
        private string descriptionField;
        
        private string subjectField;
        
        private int numberOfPhotosField;
        
        private System.Nullable<int> personIDField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string pictureURLField;
        
        private string trainingTypeNameField;
        
        private System.Nullable<int> trainingTypeIDField;
        
        private Duration durationField;
        
        private System.Nullable<double> distanceField;
        
        private int numberOfSubItemsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ClientItemID {
            get {
                return this.clientItemIDField;
            }
            set {
                this.clientItemIDField = value;
            }
        }
        
        /// <remarks/>
        public string What {
            get {
                return this.whatField;
            }
            set {
                this.whatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfPhotos {
            get {
                return this.numberOfPhotosField;
            }
            set {
                this.numberOfPhotosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string PictureURL {
            get {
                return this.pictureURLField;
            }
            set {
                this.pictureURLField = value;
            }
        }
        
        /// <remarks/>
        public string TrainingTypeName {
            get {
                return this.trainingTypeNameField;
            }
            set {
                this.trainingTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TrainingTypeID {
            get {
                return this.trainingTypeIDField;
            }
            set {
                this.trainingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public Duration Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfSubItems {
            get {
                return this.numberOfSubItemsField;
            }
            set {
                this.numberOfSubItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class ClientServerRelationResult {
        
        private int serverIDField;
        
        private string clientIDField;
        
        /// <remarks/>
        public int ServerID {
            get {
                return this.serverIDField;
            }
            set {
                this.serverIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrainingInterval {
        
        private Duration durationField;
        
        private System.Nullable<double> distanceField;
        
        private string commentField;
        
        /// <remarks/>
        public Duration Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrainingComment {
        
        private int trainingCommentIDField;
        
        private string commentField;
        
        private int personIDField;
        
        private System.DateTime createdDateTimeField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string photoMicroURLField;
        
        /// <remarks/>
        public int TrainingCommentID {
            get {
                return this.trainingCommentIDField;
            }
            set {
                this.trainingCommentIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoMicroURL {
            get {
                return this.photoMicroURLField;
            }
            set {
                this.photoMicroURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrainingExerciseSet {
        
        private System.Nullable<int> repsField;
        
        private System.Nullable<double> weightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Reps {
            get {
                return this.repsField;
            }
            set {
                this.repsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrainingExercise {
        
        private TrainingExerciseSet[] setsField;
        
        private System.Nullable<int> trainingExerciseIDField;
        
        private string trainingExerciseTypeNameField;
        
        private string commentField;
        
        /// <remarks/>
        public TrainingExerciseSet[] Sets {
            get {
                return this.setsField;
            }
            set {
                this.setsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TrainingExerciseID {
            get {
                return this.trainingExerciseIDField;
            }
            set {
                this.trainingExerciseIDField = value;
            }
        }
        
        /// <remarks/>
        public string TrainingExerciseTypeName {
            get {
                return this.trainingExerciseTypeNameField;
            }
            set {
                this.trainingExerciseTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TrainingResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class Training {
        
        private System.Nullable<int> trainingIDField;
        
        private System.Nullable<int> personIDField;
        
        private System.Nullable<int> trainingTypeIDField;
        
        private System.DateTime startDateTimeField;
        
        private Duration durationField;
        
        private System.Nullable<double> distanceField;
        
        private string descriptionField;
        
        private string privateCommentField;
        
        private System.Nullable<int> postingIDField;
        
        private System.Nullable<int> hRAvgField;
        
        private System.Nullable<int> hRMaxField;
        
        private System.Nullable<int> kCalField;
        
        private System.Nullable<int> intensityField;
        
        private System.DateTime creationDateTimeField;
        
        private System.Nullable<int> repetitionsField;
        
        private System.Nullable<int> setsField;
        
        private bool hasTimeOfDayField;
        
        private System.Nullable<int> geoRegionIDField;
        
        private bool isEveryoneInvitedField;
        
        private System.Nullable<int> cadAvgField;
        
        private System.Nullable<double> teField;
        
        private System.Nullable<int> routeIDField;
        
        private System.Nullable<int> trainingProgramTrainingIDField;
        
        private bool isCompetitionField;
        
        private Statuses statusField;
        
        private string importedDataIDField;
        
        private byte[] importedDataField;
        
        private string importedDataFormatField;
        
        private string newRouteNameField;
        
        private Privacy newRoutePrivacyField;
        
        private bool neverPublishToOtherSitesField;
        
        private TrainingExercise[] exercisesField;
        
        private string[] photosField;
        
        private TrackPoint[] trackPointsField;
        
        private TrainingComment[] commentsField;
        
        private TrainingInterval[] intervalsAndLapsField;
        
        private string[] equipmentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TrainingID {
            get {
                return this.trainingIDField;
            }
            set {
                this.trainingIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TrainingTypeID {
            get {
                return this.trainingTypeIDField;
            }
            set {
                this.trainingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public Duration Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PrivateComment {
            get {
                return this.privateCommentField;
            }
            set {
                this.privateCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PostingID {
            get {
                return this.postingIDField;
            }
            set {
                this.postingIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HRAvg {
            get {
                return this.hRAvgField;
            }
            set {
                this.hRAvgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HRMax {
            get {
                return this.hRMaxField;
            }
            set {
                this.hRMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> KCal {
            get {
                return this.kCalField;
            }
            set {
                this.kCalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Intensity {
            get {
                return this.intensityField;
            }
            set {
                this.intensityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDateTime {
            get {
                return this.creationDateTimeField;
            }
            set {
                this.creationDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Repetitions {
            get {
                return this.repetitionsField;
            }
            set {
                this.repetitionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Sets {
            get {
                return this.setsField;
            }
            set {
                this.setsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasTimeOfDay {
            get {
                return this.hasTimeOfDayField;
            }
            set {
                this.hasTimeOfDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> GeoRegionID {
            get {
                return this.geoRegionIDField;
            }
            set {
                this.geoRegionIDField = value;
            }
        }
        
        /// <remarks/>
        public bool isEveryoneInvited {
            get {
                return this.isEveryoneInvitedField;
            }
            set {
                this.isEveryoneInvitedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CadAvg {
            get {
                return this.cadAvgField;
            }
            set {
                this.cadAvgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TE {
            get {
                return this.teField;
            }
            set {
                this.teField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RouteID {
            get {
                return this.routeIDField;
            }
            set {
                this.routeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TrainingProgramTrainingID {
            get {
                return this.trainingProgramTrainingIDField;
            }
            set {
                this.trainingProgramTrainingIDField = value;
            }
        }
        
        /// <remarks/>
        public bool isCompetition {
            get {
                return this.isCompetitionField;
            }
            set {
                this.isCompetitionField = value;
            }
        }
        
        /// <remarks/>
        public Statuses Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ImportedDataID {
            get {
                return this.importedDataIDField;
            }
            set {
                this.importedDataIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ImportedData {
            get {
                return this.importedDataField;
            }
            set {
                this.importedDataField = value;
            }
        }
        
        /// <remarks/>
        public string ImportedDataFormat {
            get {
                return this.importedDataFormatField;
            }
            set {
                this.importedDataFormatField = value;
            }
        }
        
        /// <remarks/>
        public string NewRouteName {
            get {
                return this.newRouteNameField;
            }
            set {
                this.newRouteNameField = value;
            }
        }
        
        /// <remarks/>
        public Privacy NewRoutePrivacy {
            get {
                return this.newRoutePrivacyField;
            }
            set {
                this.newRoutePrivacyField = value;
            }
        }
        
        /// <remarks/>
        public bool NeverPublishToOtherSites {
            get {
                return this.neverPublishToOtherSitesField;
            }
            set {
                this.neverPublishToOtherSitesField = value;
            }
        }
        
        /// <remarks/>
        public TrainingExercise[] Exercises {
            get {
                return this.exercisesField;
            }
            set {
                this.exercisesField = value;
            }
        }
        
        /// <remarks/>
        public string[] Photos {
            get {
                return this.photosField;
            }
            set {
                this.photosField = value;
            }
        }
        
        /// <remarks/>
        public TrackPoint[] TrackPoints {
            get {
                return this.trackPointsField;
            }
            set {
                this.trackPointsField = value;
            }
        }
        
        /// <remarks/>
        public TrainingComment[] Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public TrainingInterval[] IntervalsAndLaps {
            get {
                return this.intervalsAndLapsField;
            }
            set {
                this.intervalsAndLapsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Equipment {
            get {
                return this.equipmentField;
            }
            set {
                this.equipmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public enum Statuses {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        PlannedTraining,
        
        /// <remarks/>
        PlannedTrainingThatWasNotPerformed,
        
        /// <remarks/>
        ImportedAndMustBeFollowedUp,
        
        /// <remarks/>
        ImportedButDeletedAndShouldBeIgnored,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.funbeat.se/")]
    public partial class TrainingResult : Training {
        
        private PersonInfoItem personField;
        
        private System.Nullable<int> invitedFromTrainingIDField;
        
        private string routeNameField;
        
        private string raceTitleField;
        
        private string trainingTypeNameField;
        
        /// <remarks/>
        public PersonInfoItem Person {
            get {
                return this.personField;
            }
            set {
                this.personField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InvitedFromTrainingID {
            get {
                return this.invitedFromTrainingIDField;
            }
            set {
                this.invitedFromTrainingIDField = value;
            }
        }
        
        /// <remarks/>
        public string RouteName {
            get {
                return this.routeNameField;
            }
            set {
                this.routeNameField = value;
            }
        }
        
        /// <remarks/>
        public string RaceTitle {
            get {
                return this.raceTitleField;
            }
            set {
                this.raceTitleField = value;
            }
        }
        
        /// <remarks/>
        public string TrainingTypeName {
            get {
                return this.trainingTypeNameField;
            }
            set {
                this.trainingTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WhichTrainingsHaveBeenDeletedCompletedEventHandler(object sender, WhichTrainingsHaveBeenDeletedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WhichTrainingsHaveBeenDeletedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WhichTrainingsHaveBeenDeletedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTrackPointsFromTrainingCompletedEventHandler(object sender, GetTrackPointsFromTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrackPointsFromTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrackPointsFromTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackPoint[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackPoint[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPhotosForTrainingCompletedEventHandler(object sender, GetPhotosForTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhotosForTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhotosForTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddTrainingCommentCompletedEventHandler(object sender, AddTrainingCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteTrainingCommentCompletedEventHandler(object sender, DeleteTrainingCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTrainingCompletedEventHandler(object sender, GetTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrainingResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrainingResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTrainingCompletedEventHandler(object sender, SaveTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientServerRelationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientServerRelationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteTrainingCompletedEventHandler(object sender, DeleteTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientServerRelationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientServerRelationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyNewsFeedCompletedEventHandler(object sender, GetMyNewsFeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyNewsFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyNewsFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsFeedItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsFeedItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddToFriendListCompletedEventHandler(object sender, AddToFriendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToFriendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToFriendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyFriendsCompletedEventHandler(object sender, GetMyFriendsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FriendResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FriendResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTrainingTypesCompletedEventHandler(object sender, GetTrainingTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrainingType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrainingType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SignUpCompletedEventHandler(object sender, SignUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateAndCreateSecretsCompletedEventHandler(object sender, ValidateAndCreateSecretsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAndCreateSecretsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAndCreateSecretsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoginResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyEquipmentCompletedEventHandler(object sender, GetMyEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EquipmentShortInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EquipmentShortInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExerciseTitleListCompletedEventHandler(object sender, GetExerciseTitleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExerciseTitleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExerciseTitleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExerciseTitle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExerciseTitle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyMostRecentlyUsedTrainingTypesCompletedEventHandler(object sender, GetMyMostRecentlyUsedTrainingTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyMostRecentlyUsedTrainingTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyMostRecentlyUsedTrainingTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrainingType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrainingType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPersonCompletedEventHandler(object sender, GetPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfoItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfoItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchPersonsCompletedEventHandler(object sender, SearchPersonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FriendResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FriendResult[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591