//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Janohl.ST2Funbeat.Funbeat {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TrainingServiceSoap", Namespace="http://www.funbeat.se/")]
    public partial class TrainingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddTrainingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingTypesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TrainingService() {
            this.Url = global::Janohl.ST2Funbeat.Properties.Settings.Default.Janohl_ST2Funbeat_Funbeat_TrainingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddTrainingsCompletedEventHandler AddTrainingsCompleted;
        
        /// <remarks/>
        public event AddTrainingCompletedEventHandler AddTrainingCompleted;
        
        /// <remarks/>
        public event GetTrainingTypesCompletedEventHandler GetTrainingTypesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.funbeat.se/AddTrainings", RequestNamespace="http://www.funbeat.se/", ResponseNamespace="http://www.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTrainings(System.Guid ApplicationID, User user, Training[] trainings) {
            object[] results = this.Invoke("AddTrainings", new object[] {
                        ApplicationID,
                        user,
                        trainings});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingsAsync(System.Guid ApplicationID, User user, Training[] trainings) {
            this.AddTrainingsAsync(ApplicationID, user, trainings, null);
        }
        
        /// <remarks/>
        public void AddTrainingsAsync(System.Guid ApplicationID, User user, Training[] trainings, object userState) {
            if ((this.AddTrainingsOperationCompleted == null)) {
                this.AddTrainingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingsOperationCompleted);
            }
            this.InvokeAsync("AddTrainings", new object[] {
                        ApplicationID,
                        user,
                        trainings}, this.AddTrainingsOperationCompleted, userState);
        }
        
        private void OnAddTrainingsOperationCompleted(object arg) {
            if ((this.AddTrainingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingsCompleted(this, new AddTrainingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.funbeat.se/AddTraining", RequestNamespace="http://www.funbeat.se/", ResponseNamespace="http://www.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AddTraining(System.Guid ApplicationID, User user, Training training) {
            object[] results = this.Invoke("AddTraining", new object[] {
                        ApplicationID,
                        user,
                        training});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingAsync(System.Guid ApplicationID, User user, Training training) {
            this.AddTrainingAsync(ApplicationID, user, training, null);
        }
        
        /// <remarks/>
        public void AddTrainingAsync(System.Guid ApplicationID, User user, Training training, object userState) {
            if ((this.AddTrainingOperationCompleted == null)) {
                this.AddTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingOperationCompleted);
            }
            this.InvokeAsync("AddTraining", new object[] {
                        ApplicationID,
                        user,
                        training}, this.AddTrainingOperationCompleted, userState);
        }
        
        private void OnAddTrainingOperationCompleted(object arg) {
            if ((this.AddTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingCompleted(this, new AddTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.funbeat.se/GetTrainingTypes", RequestNamespace="http://www.funbeat.se/", ResponseNamespace="http://www.funbeat.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrainingType[] GetTrainingTypes(System.Guid ApplicationID) {
            object[] results = this.Invoke("GetTrainingTypes", new object[] {
                        ApplicationID});
            return ((TrainingType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingTypesAsync(System.Guid ApplicationID) {
            this.GetTrainingTypesAsync(ApplicationID, null);
        }
        
        /// <remarks/>
        public void GetTrainingTypesAsync(System.Guid ApplicationID, object userState) {
            if ((this.GetTrainingTypesOperationCompleted == null)) {
                this.GetTrainingTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingTypesOperationCompleted);
            }
            this.InvokeAsync("GetTrainingTypes", new object[] {
                        ApplicationID}, this.GetTrainingTypesOperationCompleted, userState);
        }
        
        private void OnGetTrainingTypesOperationCompleted(object arg) {
            if ((this.GetTrainingTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingTypesCompleted(this, new GetTrainingTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.funbeat.se/")]
    public partial class User {
        
        private string usernameField;
        
        private string passwordField;
        
        private PasswordFormats passwordFormatField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public PasswordFormats PasswordFormat {
            get {
                return this.passwordFormatField;
            }
            set {
                this.passwordFormatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.funbeat.se/")]
    public enum PasswordFormats {
        
        /// <remarks/>
        SHA1,
        
        /// <remarks/>
        Clear,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.funbeat.se/")]
    public partial class TrainingType {
        
        private string nameField;
        
        private int idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.funbeat.se/")]
    public partial class TrackPoint {
        
        private System.DateTime dateTimeField;
        
        private System.Nullable<double> longitudeField;
        
        private System.Nullable<double> latitudeField;
        
        private System.Nullable<double> altitudeField;
        
        private System.Nullable<double> distanceField;
        
        private System.Nullable<double> speedField;
        
        private System.Nullable<double> paceField;
        
        private System.Nullable<int> hrField;
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Pace {
            get {
                return this.paceField;
            }
            set {
                this.paceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HR {
            get {
                return this.hrField;
            }
            set {
                this.hrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.funbeat.se/")]
    public partial class Training {
        
        private int trainingTypeIDField;
        
        private System.Nullable<System.DateTime> startDateTimeField;
        
        private bool hasTimeOfDayField;
        
        private int hoursField;
        
        private int minutesField;
        
        private int secondsField;
        
        private System.Nullable<double> teField;
        
        private System.Nullable<int> cadAvgField;
        
        private string importedDataIDField;
        
        private System.Nullable<double> distanceField;
        
        private string commentField;
        
        private string privateCommentField;
        
        private System.Nullable<int> hRAvgField;
        
        private System.Nullable<int> hRMaxField;
        
        private System.Nullable<int> intensityField;
        
        private System.Nullable<int> kCalField;
        
        private System.Nullable<int> repetitionsField;
        
        private System.Nullable<int> setsField;
        
        private TrackPoint[] trackPointsField;
        
        /// <remarks/>
        public int TrainingTypeID {
            get {
                return this.trainingTypeIDField;
            }
            set {
                this.trainingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool HasTimeOfDay {
            get {
                return this.hasTimeOfDayField;
            }
            set {
                this.hasTimeOfDayField = value;
            }
        }
        
        /// <remarks/>
        public int Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public int Minutes {
            get {
                return this.minutesField;
            }
            set {
                this.minutesField = value;
            }
        }
        
        /// <remarks/>
        public int Seconds {
            get {
                return this.secondsField;
            }
            set {
                this.secondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TE {
            get {
                return this.teField;
            }
            set {
                this.teField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CadAvg {
            get {
                return this.cadAvgField;
            }
            set {
                this.cadAvgField = value;
            }
        }
        
        /// <remarks/>
        public string ImportedDataID {
            get {
                return this.importedDataIDField;
            }
            set {
                this.importedDataIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string PrivateComment {
            get {
                return this.privateCommentField;
            }
            set {
                this.privateCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HRAvg {
            get {
                return this.hRAvgField;
            }
            set {
                this.hRAvgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HRMax {
            get {
                return this.hRMaxField;
            }
            set {
                this.hRMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Intensity {
            get {
                return this.intensityField;
            }
            set {
                this.intensityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> KCal {
            get {
                return this.kCalField;
            }
            set {
                this.kCalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Repetitions {
            get {
                return this.repetitionsField;
            }
            set {
                this.repetitionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Sets {
            get {
                return this.setsField;
            }
            set {
                this.setsField = value;
            }
        }
        
        /// <remarks/>
        public TrackPoint[] TrackPoints {
            get {
                return this.trackPointsField;
            }
            set {
                this.trackPointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddTrainingsCompletedEventHandler(object sender, AddTrainingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddTrainingCompletedEventHandler(object sender, AddTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTrainingTypesCompletedEventHandler(object sender, GetTrainingTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrainingType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrainingType[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591